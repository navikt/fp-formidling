package no.nav.foreldrepenger.melding.brevbestiller;

import java.util.Map;
import java.util.Optional;

import no.nav.foreldrepenger.melding.geografisk.Landkoder;

public class LandkodeOversetter {

    static final String LANDKODER_ISO2_UOPPGITT = "???";

    private static final Map<String, String> LANDKODER_ISO2 = Map.ofEntries(
            Map.entry(Landkoder.AFG.getKode(), "AF"),
            Map.entry(Landkoder.ALB.getKode(), "AL"),
            Map.entry(Landkoder.DZA.getKode(), "DZ"),
            Map.entry(Landkoder.ASM.getKode(), "AS"),
            Map.entry(Landkoder.AND.getKode(), "AD"),
            Map.entry(Landkoder.AGO.getKode(), "AO"),
            Map.entry(Landkoder.AIA.getKode(), "AI"),
            Map.entry(Landkoder.ATG.getKode(), "AG"),
            Map.entry(Landkoder.ARG.getKode(), "AR"),
            Map.entry(Landkoder.ARM.getKode(), "AM"),
            Map.entry(Landkoder.ABW.getKode(), "AW"),
            Map.entry(Landkoder.AUS.getKode(), "AU"),
            Map.entry(Landkoder.AZE.getKode(), "AZ"),
            Map.entry(Landkoder.BHS.getKode(), "BS"),
            Map.entry(Landkoder.BHR.getKode(), "BH"),
            Map.entry(Landkoder.BGD.getKode(), "BD"),
            Map.entry(Landkoder.BRB.getKode(), "BB"),
            Map.entry(Landkoder.BEL.getKode(), "BE"),
            Map.entry(Landkoder.BLZ.getKode(), "BZ"),
            Map.entry(Landkoder.BEN.getKode(), "BJ"),
            Map.entry(Landkoder.BMU.getKode(), "BM"),
            Map.entry(Landkoder.BTN.getKode(), "BT"),
            Map.entry(Landkoder.BOL.getKode(), "BO"),
            Map.entry(Landkoder.BES.getKode(), "BQ"),
            Map.entry(Landkoder.BIH.getKode(), "BA"),
            Map.entry(Landkoder.BWA.getKode(), "BW"),
            Map.entry(Landkoder.BVT.getKode(), "BV"),
            Map.entry(Landkoder.BRA.getKode(), "BR"),
            Map.entry(Landkoder.IOT.getKode(), "IO"),
            Map.entry(Landkoder.BRN.getKode(), "BN"),
            Map.entry(Landkoder.BGR.getKode(), "BG"),
            Map.entry(Landkoder.BFA.getKode(), "BF"),
            Map.entry(Landkoder.BDI.getKode(), "BI"),
            Map.entry(Landkoder.CAN.getKode(), "CA"),
            Map.entry(Landkoder.CYM.getKode(), "KY"),
            Map.entry(Landkoder.CHL.getKode(), "CL"),
            Map.entry(Landkoder.CXR.getKode(), "CX"),
            Map.entry(Landkoder.COL.getKode(), "CO"),
            Map.entry(Landkoder.COK.getKode(), "CK"),
            Map.entry(Landkoder.CRI.getKode(), "CR"),
            Map.entry(Landkoder.CUB.getKode(), "CU"),
            Map.entry(Landkoder.CUW.getKode(), "CW"),
            Map.entry(Landkoder.DNK.getKode(), "DK"),
            Map.entry(Landkoder.ARE.getKode(), "AE"),
            Map.entry(Landkoder.ANT.getKode(), "AN"),
            Map.entry(Landkoder.DOM.getKode(), "DO"),
            Map.entry(Landkoder.CZE.getKode(), "CZ"),
            Map.entry(Landkoder.PSE.getKode(), "PS"),
            Map.entry(Landkoder.DJI.getKode(), "DJ"),
            Map.entry(Landkoder.DMA.getKode(), "DM"),
            Map.entry(Landkoder.ECU.getKode(), "EC"),
            Map.entry(Landkoder.EGY.getKode(), "EG"),
            Map.entry(Landkoder.GNQ.getKode(), "GQ"),
            Map.entry(Landkoder.SLV.getKode(), "SV"),
            Map.entry(Landkoder.CIV.getKode(), "CI"),
            Map.entry(Landkoder.ERI.getKode(), "ER"),
            Map.entry(Landkoder.EST.getKode(), "EE"),
            Map.entry(Landkoder.ETH.getKode(), "ET"),
            Map.entry(Landkoder.FLK.getKode(), "FK"),
            Map.entry(Landkoder.FJI.getKode(), "FJ"),
            Map.entry(Landkoder.PHL.getKode(), "PH"),
            Map.entry(Landkoder.FIN.getKode(), "FI"),
            Map.entry(Landkoder.FRA.getKode(), "FR"),
            Map.entry(Landkoder.GUF.getKode(), "GF"),
            Map.entry(Landkoder.PYF.getKode(), "PF"),
            Map.entry(Landkoder.FRO.getKode(), "FO"),
            Map.entry(Landkoder.GAB.getKode(), "GA"),
            Map.entry(Landkoder.GMB.getKode(), "GM"),
            Map.entry(Landkoder.GEO.getKode(), "GE"),
            Map.entry(Landkoder.GHA.getKode(), "GH"),
            Map.entry(Landkoder.GIB.getKode(), "GI"),
            Map.entry(Landkoder.GRD.getKode(), "GD"),
            Map.entry(Landkoder.GRL.getKode(), "GL"),
            Map.entry(Landkoder.GLP.getKode(), "GP"),
            Map.entry(Landkoder.GUM.getKode(), "GU"),
            Map.entry(Landkoder.GTM.getKode(), "GT"),
            Map.entry(Landkoder.GGY.getKode(), "GG"),
            Map.entry(Landkoder.GIN.getKode(), "GN"),
            Map.entry(Landkoder.GNB.getKode(), "GW"),
            Map.entry(Landkoder.GUY.getKode(), "GY"),
            Map.entry(Landkoder.HTI.getKode(), "HT"),
            Map.entry(Landkoder.HMD.getKode(), "HM"),
            Map.entry(Landkoder.GRC.getKode(), "GR"),
            Map.entry(Landkoder.HND.getKode(), "HN"),
            Map.entry(Landkoder.HKG.getKode(), "HK"),
            Map.entry(Landkoder.BLR.getKode(), "BY"),
            Map.entry(Landkoder.IND.getKode(), "IN"),
            Map.entry(Landkoder.IDN.getKode(), "ID"),
            Map.entry(Landkoder.IRQ.getKode(), "IQ"),
            Map.entry(Landkoder.IRN.getKode(), "IR"),
            Map.entry(Landkoder.IRL.getKode(), "IE"),
            Map.entry(Landkoder.ISL.getKode(), "IS"),
            Map.entry(Landkoder.IMN.getKode(), "IM"),
            Map.entry(Landkoder.ISR.getKode(), "IL"),
            Map.entry(Landkoder.ITA.getKode(), "IT"),
            Map.entry(Landkoder.JAM.getKode(), "JM"),
            Map.entry(Landkoder.JPN.getKode(), "JP"),
            Map.entry(Landkoder.YEM.getKode(), "YE"),
            Map.entry(Landkoder.JEY.getKode(), "JE"),
            Map.entry(Landkoder.VIR.getKode(), "VI"),
            Map.entry(Landkoder.VGB.getKode(), "VG"),
            Map.entry(Landkoder.JOR.getKode(), "JO"),
            Map.entry(Landkoder.YUG.getKode(), "YU"),
            Map.entry(Landkoder.KHM.getKode(), "KH"),
            Map.entry(Landkoder.CMR.getKode(), "CM"),
            Map.entry(Landkoder.CPV.getKode(), "CV"),
            Map.entry(Landkoder.KAZ.getKode(), "KZ"),
            Map.entry(Landkoder.KEN.getKode(), "KE"),
            Map.entry(Landkoder.KGZ.getKode(), "KG"),
            Map.entry(Landkoder.KIR.getKode(), "KI"),
            Map.entry(Landkoder.CCK.getKode(), "CC"),
            Map.entry(Landkoder.COM.getKode(), "KM"),
            Map.entry(Landkoder.COD.getKode(), "CD"),
            Map.entry(Landkoder.COG.getKode(), "CG"),
            Map.entry(Landkoder.XXK.getKode(), "XK"),
            Map.entry(Landkoder.HRV.getKode(), "HR"),
            Map.entry(Landkoder.KWT.getKode(), "KW"),
            Map.entry(Landkoder.CYP.getKode(), "CY"),
            Map.entry(Landkoder.LAO.getKode(), "LA"),
            Map.entry(Landkoder.LVA.getKode(), "LV"),
            Map.entry(Landkoder.LSO.getKode(), "LS"),
            Map.entry(Landkoder.LBN.getKode(), "LB"),
            Map.entry(Landkoder.LBR.getKode(), "LR"),
            Map.entry(Landkoder.LBY.getKode(), "LY"),
            Map.entry(Landkoder.LIE.getKode(), "LI"),
            Map.entry(Landkoder.LTU.getKode(), "LT"),
            Map.entry(Landkoder.LUX.getKode(), "LU"),
            Map.entry(Landkoder.MAC.getKode(), "MO"),
            Map.entry(Landkoder.MDG.getKode(), "MG"),
            Map.entry(Landkoder.MKD.getKode(), "MK"),
            Map.entry(Landkoder.MWI.getKode(), "MW"),
            Map.entry(Landkoder.MYS.getKode(), "MY"),
            Map.entry(Landkoder.MDV.getKode(), "MV"),
            Map.entry(Landkoder.MLI.getKode(), "ML"),
            Map.entry(Landkoder.MLT.getKode(), "MT"),
            Map.entry(Landkoder.MAR.getKode(), "MA"),
            Map.entry(Landkoder.MHL.getKode(), "MH"),
            Map.entry(Landkoder.MTQ.getKode(), "MQ"),
            Map.entry(Landkoder.MRT.getKode(), "MR"),
            Map.entry(Landkoder.MUS.getKode(), "MU"),
            Map.entry(Landkoder.MYT.getKode(), "YT"),
            Map.entry(Landkoder.MEX.getKode(), "MX"),
            Map.entry(Landkoder.FSM.getKode(), "FM"),
            Map.entry(Landkoder.UMI.getKode(), "UM"),
            Map.entry(Landkoder.MDA.getKode(), "MD"),
            Map.entry(Landkoder.MCO.getKode(), "MC"),
            Map.entry(Landkoder.MNG.getKode(), "MN"),
            Map.entry(Landkoder.MSR.getKode(), "MS"),
            Map.entry(Landkoder.MNE.getKode(), "ME"),
            Map.entry(Landkoder.MOZ.getKode(), "MZ"),
            Map.entry(Landkoder.MMR.getKode(), "MM"),
            Map.entry(Landkoder.NAM.getKode(), "NA"),
            Map.entry(Landkoder.NRU.getKode(), "NR"),
            Map.entry(Landkoder.NLD.getKode(), "NL"),
            Map.entry(Landkoder.NPL.getKode(), "NP"),
            Map.entry(Landkoder.NZL.getKode(), "NZ"),
            Map.entry(Landkoder.NIC.getKode(), "NI"),
            Map.entry(Landkoder.NER.getKode(), "NE"),
            Map.entry(Landkoder.NGA.getKode(), "NG"),
            Map.entry(Landkoder.NIU.getKode(), "NU"),
            Map.entry(Landkoder.PRK.getKode(), "KP"),
            Map.entry(Landkoder.MNP.getKode(), "MP"),
            Map.entry(Landkoder.NFK.getKode(), "NF"),
            Map.entry(Landkoder.NOR.getKode(), "NO"),
            Map.entry(Landkoder.NCL.getKode(), "NC"),
            Map.entry(Landkoder.OMN.getKode(), "OM"),
            Map.entry(Landkoder.PAK.getKode(), "PK"),
            Map.entry(Landkoder.PLW.getKode(), "PW"),
            Map.entry(Landkoder.PAN.getKode(), "PA"),
            Map.entry(Landkoder.PNG.getKode(), "PG"),
            Map.entry(Landkoder.PRY.getKode(), "PY"),
            Map.entry(Landkoder.PER.getKode(), "PE"),
            Map.entry(Landkoder.PCN.getKode(), "PN"),
            Map.entry(Landkoder.POL.getKode(), "PL"),
            Map.entry(Landkoder.PRT.getKode(), "PT"),
            Map.entry(Landkoder.PRI.getKode(), "PR"),
            Map.entry(Landkoder.QAT.getKode(), "QA"),
            Map.entry(Landkoder.CHN.getKode(), "CN"),
            Map.entry(Landkoder.REU.getKode(), "RE"),
            Map.entry(Landkoder.ROU.getKode(), "RO"),
            Map.entry(Landkoder.RUS.getKode(), "RU"),
            Map.entry(Landkoder.RWA.getKode(), "RW"),
            Map.entry(Landkoder.BLM.getKode(), "BL"),
            Map.entry(Landkoder.MAF.getKode(), "MF"),
            Map.entry(Landkoder.SLB.getKode(), "SB"),
            Map.entry(Landkoder.WSM.getKode(), "WS"),
            Map.entry(Landkoder.SMR.getKode(), "SM"),
            Map.entry(Landkoder.STP.getKode(), "ST"),
            Map.entry(Landkoder.SAU.getKode(), "SA"),
            Map.entry(Landkoder.SEN.getKode(), "SN"),
            Map.entry(Landkoder.CAF.getKode(), "CF"),
            Map.entry(Landkoder.SRB.getKode(), "RS"),
            Map.entry(Landkoder.SCG.getKode(), "CS"),
            Map.entry(Landkoder.SYC.getKode(), "SC"),
            Map.entry(Landkoder.SLE.getKode(), "SL"),
            Map.entry(Landkoder.SGP.getKode(), "SG"),
            Map.entry(Landkoder.SXM.getKode(), "SX"),
            Map.entry(Landkoder.SVK.getKode(), "SK"),
            Map.entry(Landkoder.SVN.getKode(), "SI"),
            Map.entry(Landkoder.SOM.getKode(), "SO"),
            Map.entry(Landkoder.SUN.getKode(), "SU"),
            Map.entry(Landkoder.ESP.getKode(), "ES"),
            Map.entry(Landkoder.LKA.getKode(), "LK"),
            Map.entry(Landkoder.SHN.getKode(), "SH"),
            Map.entry(Landkoder.LCA.getKode(), "LC"),
            Map.entry(Landkoder.VCT.getKode(), "VC"),
            Map.entry(Landkoder.KNA.getKode(), "KN"),
            Map.entry(Landkoder.GBR.getKode(), "GB"),
            Map.entry(Landkoder.SPM.getKode(), "PM"),
            Map.entry(Landkoder.SDN.getKode(), "SD"),
            Map.entry(Landkoder.SUR.getKode(), "SR"),
            Map.entry(Landkoder.SJM.getKode(), "SJ"),
            Map.entry(Landkoder.CHE.getKode(), "CH"),
            Map.entry(Landkoder.SWE.getKode(), "SE"),
            Map.entry(Landkoder.SWZ.getKode(), "SZ"),
            Map.entry(Landkoder.SYR.getKode(), "SY"),
            Map.entry(Landkoder.ZAF.getKode(), "ZA"),
            Map.entry(Landkoder.SGS.getKode(), "GS"),
            Map.entry(Landkoder.KOR.getKode(), "KR"),
            Map.entry(Landkoder.SSD.getKode(), "SS"),
            Map.entry(Landkoder.TJK.getKode(), "TJ"),
            Map.entry(Landkoder.TWN.getKode(), "TW"),
            Map.entry(Landkoder.TZA.getKode(), "TZ"),
            Map.entry(Landkoder.THA.getKode(), "TH"),
            Map.entry(Landkoder.TGO.getKode(), "TG"),
            Map.entry(Landkoder.TKL.getKode(), "TK"),
            Map.entry(Landkoder.TON.getKode(), "TO"),
            Map.entry(Landkoder.TTO.getKode(), "TT"),
            Map.entry(Landkoder.TCD.getKode(), "TD"),
            Map.entry(Landkoder.TUN.getKode(), "TN"),
            Map.entry(Landkoder.TKM.getKode(), "TM"),
            Map.entry(Landkoder.TCA.getKode(), "TC"),
            Map.entry(Landkoder.TUV.getKode(), "TV"),
            Map.entry(Landkoder.TUR.getKode(), "TR"),
            Map.entry(Landkoder.DEU.getKode(), "DE"),
            Map.entry(Landkoder.UGA.getKode(), "UG"),
            Map.entry(Landkoder.UKR.getKode(), "UA"),
            Map.entry(Landkoder.HUN.getKode(), "HU"),
            Map.entry(Landkoder.UOPPGITT.getKode(), LANDKODER_ISO2_UOPPGITT),
            Map.entry(Landkoder.URY.getKode(), "UY"),
            Map.entry(Landkoder.USA.getKode(), "US"),
            Map.entry(Landkoder.UZB.getKode(), "UZ"),
            Map.entry(Landkoder.VUT.getKode(), "VU"),
            Map.entry(Landkoder.VAT.getKode(), "VA"),
            Map.entry(Landkoder.VEN.getKode(), "VE"),
            Map.entry(Landkoder.ESH.getKode(), "EH"),
            Map.entry(Landkoder.VNM.getKode(), "VN"),
            Map.entry(Landkoder.WLF.getKode(), "WF"),
            Map.entry(Landkoder.ZMB.getKode(), "ZM"),
            Map.entry(Landkoder.ZWE.getKode(), "ZW"),
            Map.entry(Landkoder.AUT.getKode(), "AT"),
            Map.entry(Landkoder.TLS.getKode(), "TL"),
            Map.entry(Landkoder.ALA.getKode(), "AX")
    );

    public static String tilLandkoderToBokstav(String landkode) {
        return Optional.ofNullable(landkode)
                .map(l -> l.length() == 2 ? lovligTobokstavs(l) : LANDKODER_ISO2.getOrDefault(l, LANDKODER_ISO2_UOPPGITT))
                .orElse(Landkoder.UOPPGITT.getKode());
    }

    private static String lovligTobokstavs(String land) {
        return LANDKODER_ISO2.values().stream().filter(land::equals).findFirst().orElse(LANDKODER_ISO2_UOPPGITT);
    }

}
