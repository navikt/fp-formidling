name: Bygg pull request

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - '.github/workflows/build.yml'
      - '.github/workflows/promote.yml'
      - '.github/dependabot.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: fpformidling_unit
          POSTGRES_PASSWORD: fpformidling_unit
          POSTGRES_DB: fpformidling_unit
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Set build version
        run: |
          echo "BUILD_VERSION=2.0-$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Build med sonar analyse
        if: github.actor != 'dependabot[bot]'
        run: |
          echo "Building $BUILD_VERSION"
          mvn jacoco:prepare-agent verify jacoco:report sonar:sonar -e --batch-mode --settings .github/.m2/settings.xml -Drevision=${BUILD_VERSION} -Dsonar.login=${SONAR_TOKEN}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

      - name: Build uten sonar analyse
        if: github.actor == 'dependabot[bot]'
        run: |
          echo "Building $BUILD_VERSION"
          mvn verify -e --batch-mode --settings .github/.m2/settings.xml -Drevision=${BUILD_VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

